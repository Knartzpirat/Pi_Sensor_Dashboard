generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationen
  refreshTokens  RefreshToken[]
  recoveryTokens RecoveryToken[]

  @@map("users")
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  // "Angemeldet bleiben" Flag
  persistent Boolean  @default(false)
  
  // Security
  ipAddress String?
  userAgent String?
  
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
  @@index([expiresAt])
  @@map("refresh_tokens")
}

model RecoveryToken {
  id        String   @id @default(cuid())
  token     String   @unique
  expiresAt DateTime
  used      Boolean  @default(false)
  usedAt    DateTime?
  createdAt DateTime @default(now())
  
  // IP f√ºr Security Logging
  ipAddress String?
  
  // Beziehung zum User
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
  @@index([expiresAt])
  @@map("recovery_tokens")
}


model SetupStatus {
  id          String   @id @default(cuid())
  isCompleted Boolean  @default(false)
  completedAt DateTime?
  version     String?

  @@map("setup_status")
}